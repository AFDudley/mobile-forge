--- tmp/pynacl-clean/orig/setup.py	2025-05-18 03:42:18
+++ tmp/pynacl-clean/patched/setup.py	2025-05-18 03:42:18
@@ -22,7 +22,9 @@
 import platform
 import shutil
 import subprocess
+import stat
 import sys
+import sysconfig
 from sysconfig import get_config_vars
 
 from setuptools import Distribution, setup
\ No newline at end of file
@@ -61,6 +63,29 @@
 sodium = functools.partial(here, "src/libsodium/src/libsodium")
 
 
+# Path to xcframework output directory
+def xcframework_dir(*paths):
+    return os.path.join(abshere("src/libsodium/libsodium-apple"), *paths)
+
+
+# Detect if building for Apple platforms
+def is_apple_mobile_platform():
+    """Detect if we're building for an Apple mobile platform."""
+    platform_name = sysconfig.get_platform()
+    # Detect iOS/tvOS/watchOS build environments
+    return platform_name.startswith(('ios-', 'tvos-', 'watchos-'))
+
+
+def is_apple_platform():
+    """Detect if we're building for any Apple platform."""
+    system = platform.system()
+    if system == 'Darwin':
+        return True
+    # Also check sysconfig platform for iOS/tvOS/watchOS
+    platform_name = sysconfig.get_platform()
+    return platform_name.startswith(('ios-', 'tvos-', 'watchos-'))
+
+
 sys.path.insert(0, abshere("src"))
 
 
\ No newline at end of file
@@ -137,6 +162,11 @@
         ]:
             os.chmod(here(filename), 0o755)
 
+        # For Apple mobile platforms, use our iOS-specific xcframework build
+        if is_apple_mobile_platform():
+            return self._build_ios_xcframework()
+
+        # For non-Apple platforms, use the standard build with make
         if not shutil.which("make"):
             raise Exception("ERROR: The 'make' utility is missing from PATH")
 
\ No newline at end of file
@@ -174,7 +204,45 @@
         # Install the built library
         subprocess.check_call(["make", "install"] + make_args, cwd=build_temp)
 
+    def _build_ios_xcframework(self):
+        """Build libsodium using the iOS-specific xcframework script."""
+        # The script is copied by build.sh to this location
+        xcframework_script = abshere("src/libsodium/dist-build/ios-xcframework.sh")
+        
+        # Ensure script is executable
+        os.chmod(xcframework_script, os.stat(xcframework_script).st_mode | stat.S_IEXEC)
+        
+        # Set environment variables
+        env = os.environ.copy()
+        
+        # Set iOS minimum version
+        env["IOS_SIMULATOR_VERSION_MIN"] = "13.0"
+        env["IOS_VERSION_MIN"] = "13.0"
+        
+        # Determine if we need minimal build
+        if os.environ.get("SODIUM_INSTALL_MINIMAL"):
+            env["LIBSODIUM_FULL_BUILD"] = ""
+        else:
+            env["LIBSODIUM_FULL_BUILD"] = "1"
+        
+        # Run the xcframework script
+        print("Building libsodium XCFramework for iOS platforms...")
+        build_dir = abshere("src/libsodium")
+        subprocess.check_call([xcframework_script], cwd=build_dir, env=env)
+        
+        # Copy headers and libs from the XCFramework to include directory
+        lib_dir = os.path.join(self.build_clib, "lib")
+        include_dir = os.path.join(self.build_clib, "include")
+        
+        os.makedirs(lib_dir, exist_ok=True)
+        os.makedirs(include_dir, exist_ok=True)
+        
+        # Copy headers to include directory
+        subprocess.check_call(["cp", "-a", 
+                              os.path.join(build_dir, "libsodium-apple/ios/include/"), 
+                              os.path.dirname(include_dir)])
 
+
 class build_ext(_build_ext):
     def run(self):
         if self.distribution.has_c_libraries():
\ No newline at end of file
@@ -190,6 +258,13 @@
                 0,
                 os.path.join(build_clib.build_clib, "lib"),
             )
+            
+            # If building for Apple platforms, add the XCFramework to library paths
+            if is_apple_platform():
+                sodium_dir = abshere("src/libsodium")
+                xcframework_path = os.path.join(sodium_dir, "libsodium-apple/Clibsodium.xcframework")
+                self.libraries.append("-framework")
+                self.libraries.append("Clibsodium")
 
         return _build_ext.run(self)
 
\ No newline at end of file
@@ -231,4 +306,4 @@
         "Programming Language :: Python :: 3.9",
         "Programming Language :: Python :: 3.10",
     ],
-)
+)
\ No newline at end of file
